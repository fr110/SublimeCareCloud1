<UserControl x:Class="SublimeCareCloud.Views.AddEmployeeView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:SublimeCareCloud.Views"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:auto="clr-namespace:FeserWard.Controls;assembly=IntelliBox"
                xmlns:sys="clr-namespace:System;assembly=mscorlib"
             mc:Ignorable="d" MinWidth="1000" Loaded="UserControl_Loaded_1"
             >
    <Grid >


        <StackPanel HorizontalAlignment="Stretch">
            <DockPanel DockPanel.Dock="Top"  HorizontalAlignment="Stretch"  VerticalAlignment="Top"  Background="#FFCACACA"  x:Name="Opreations" >
                <Border Margin="10,5"   >
                    <StackPanel Orientation="Horizontal">
                        <Button TabIndex="8" IsDefault="True"   HorizontalAlignment="Stretch"  x:Name="btnSaveDoctor"
                         Style="{StaticResource TopOpreatButton}" 
                     Grid.Row="1" Margin="5,10" IsEnabled="{Binding CanSave}" Click="Button_Click">
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch" >
                                <materialDesign:PackIcon Kind="ContentSave"  Width="14" Height="14" Margin="2,2" />
                                <TextBlock Text="Save"  HorizontalAlignment="Left" Margin="8,0"
                              FontWeight="Normal" FontStyle="Normal" TextDecorations="{x:Null}"/>
                            </StackPanel>
                        </Button>


                    </StackPanel>
                </Border>


            </DockPanel>
            <!--<Button Content="Save Employee" Grid.Column="1" HorizontalAlignment="Left"   VerticalAlignment="Top" Width="129" Click="" Height="26" TabIndex="12"/>-->
            <Grid HorizontalAlignment="Stretch">
                <Grid.RowDefinitions>
                    <RowDefinition Height="45"  />
                </Grid.RowDefinitions>
                <Label x:Name="lblErrorMsg" Content="Label" HorizontalAlignment="Stretch"  Grid.Row="1" VerticalAlignment="Top"   Height="26" Visibility="Hidden" />
            </Grid>
            <ScrollViewer>

                <DockPanel  >
                    <DockPanel DockPanel.Dock="Left">
                        <Grid x:Name="grid2" HorizontalAlignment="Left" VerticalAlignment="Top" Width="883">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="501"/>

                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>

                            </Grid.RowDefinitions>

                            <Label Content="i Employee ID:" Grid.Column="0" HorizontalAlignment="Left"    VerticalAlignment="Center" Height="26" Width="61" Visibility="Hidden" TabIndex="1"/>
                            <TextBox x:Name="iEmployeeIDTextBox" HorizontalAlignment="Left"    Text="{Binding IEmployeeID, Mode=OneWay}" VerticalAlignment="Center"  Visibility="Hidden"/>

                            <GroupBox Grid.Column="1"  Visibility="Hidden" Header="Generate / Pay Salary "  Margin="150" x:Name="SalleryBox"  HorizontalAlignment="Left" Height="185"  VerticalAlignment="Top" Width="365">
                                <Grid HorizontalAlignment="Left" Height="151" VerticalAlignment="Top" Width="346" >
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="25*"/>
                                        <RowDefinition Height="28*"/>
                                        <RowDefinition Height="25*"/>
                                        <RowDefinition Height="25*"/>
                                        <RowDefinition Height="35*"/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="46*"/>
                                        <ColumnDefinition Width="127*"/>
                                    </Grid.ColumnDefinitions>
                                    <DatePicker x:Name="dddSrtDate"  HorizontalAlignment="Left"  DisplayDateEnd="{x:Static sys:DateTime.Now}" 
            				SelectedDate="{Binding dSrtDate, Mode=TwoWay, NotifyOnValidationError=true, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=true}" VerticalAlignment="Center"  Width="107" Grid.Column="1" TargetUpdated="dddSrtDate_TargetUpdated" LostFocus="dddSrtDate_LostFocus" IsEnabled="False"/>
                                    <TextBox x:Name="txtiDays" IsReadOnly="True"  Grid.Column="1" HorizontalAlignment="Left"     
            				Text="{Binding iDays, Mode=TwoWay, NotifyOnValidationError=true, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=true}"
            				VerticalAlignment="Center" Width="72" Grid.Row="2"/>
                                    <DatePicker x:Name="dddEndDate" HorizontalAlignment="Left"    DisplayDateEnd="{x:Static sys:DateTime.Now}"
            				SelectedDate="{Binding dEndDate, Mode=TwoWay, NotifyOnValidationError=true, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=true}" VerticalAlignment="Center"  Width="107" Grid.Column="1" Grid.Row="1" LostFocus="dddEndDate_LostFocus"/>
                                    <Label Content="Start Date:" HorizontalAlignment="Left"    VerticalAlignment="Center"  Width="79"/>
                                    <Label Content="End Date:" HorizontalAlignment="Left"    VerticalAlignment="Center"  Width="72" Grid.Row="1"/>
                                    <Label Content="Working Days:"   VerticalAlignment="Center" Height="20" Grid.Row="2"/>
                                    <Label Content="Absent Days:" HorizontalAlignment="Left"    VerticalAlignment="Center" Height="20" Width="77" Grid.Row="2" Grid.Column="1"/>
                                    <TextBox x:Name="txtIAbsentdays" Grid.Column="1" HorizontalAlignment="Left"    
            				Text="{Binding IAbsentdays, Mode=TwoWay, NotifyOnValidationError=true, TargetNullValue=0, UpdateSourceTrigger=LostFocus, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="72" Grid.Row="2" LostFocus="txtIAbsentdays_LostFocus" />
                                    <Label Content="Over Time:" HorizontalAlignment="Left"    VerticalAlignment="Center"  Width="72" Grid.Row="3"/>
                                    <TextBox x:Name="txtIOverTimeAmount" Grid.Column="1" HorizontalAlignment="Left"    
            				Text="{Binding FOverTime, Mode=TwoWay, NotifyOnValidationError=true, TargetNullValue=0, UpdateSourceTrigger=LostFocus, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="72" Grid.Row="3" LostFocus="txtIOverTimeAmount_LostFocus"/>
                                    <Label Content="Deduction:" HorizontalAlignment="Left"    VerticalAlignment="Center" Height="19" Width="77" Grid.Row="3" Grid.Column="1"/>
                                    <TextBox x:Name="txtiDeduction" Grid.Column="1" HorizontalAlignment="Left"   
            				Text="{Binding iDeduction, Mode=TwoWay, NotifyOnValidationError=True, TargetNullValue=0, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True}" VerticalAlignment="Center" Width="72" Grid.Row="3" LostFocus="txtiDeduction_LostFocus"/>
                                    <Label Content="Payable:" HorizontalAlignment="Left"   VerticalAlignment="Center"  Width="72" Grid.Row="4"/>
                                    <TextBox x:Name="txtiAmount" Grid.Column="1" HorizontalAlignment="Left"   
            				IsReadOnly="True" 	Text="{Binding iAmount, Mode=TwoWay, NotifyOnValidationError=true, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="107" Grid.Row="4"/>
                                    <Button x:Name="gnrtSalary"  Content="Calculate" HorizontalAlignment="Left"  VerticalAlignment="Top" Width="103" Grid.Column="1" Height="26" Click="Button_Click_2"/>
                                    <Button Content="Cancel" Grid.Column="1" HorizontalAlignment="Left"      VerticalAlignment="Top" Width="103" Grid.Row="1" Click="Button_Click_3" Height="26"/>
                                </Grid>
                            </GroupBox>

                            <Label Content="" x:Name="lblSalarymsg"  Grid.Column="1" HorizontalAlignment="Left" VerticalAlignment="Top" Width="311" />
                            <Button x:Name="ShowAccount" Grid.Column="1" HorizontalAlignment="Left" VerticalAlignment="Top" Width="161" Content="Account Detail" Click="ShowAccount_Click_1"  Visibility="Hidden" Height="26" />

                            <Grid x:Name="EmpInfo"   VerticalAlignment="Top" >
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" MinWidth="100"/>
                                    <ColumnDefinition Width="Auto" MinWidth="200"/>

                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="30"/>
                                    <RowDefinition Height="30"/>
                                    <RowDefinition Height="30"/>
                                    <RowDefinition Height="30"/>
                                    <RowDefinition Height="30"/>
                                    <RowDefinition Height="30"/>
                                    <RowDefinition Height="30"/>
                                    <RowDefinition Height="30"/>
                                    <RowDefinition Height="30"/>
                                    <RowDefinition Height="30"/>
                                    <RowDefinition Height="30"/>
                                    <RowDefinition Height="30"/>
                                    <RowDefinition Height="30"/>


                                </Grid.RowDefinitions>
                                <Label Content="i Empid:" Grid.Column="0"    Grid.Row="0" VerticalAlignment="Center" Visibility="Hidden"   />
                                <TextBox x:Name="iEmpidTextBox" Grid.Column="1"     Grid.Row="0" Text="{Binding iEmpid, Mode=OneWay}" VerticalAlignment="Center"  Visibility="Hidden"/>
                                <Label Content="Title:*" Grid.Column="0"    VerticalAlignment="Center"  />
                                <TextBox x:Name="vTitleTextBox" Grid.Column="1"     
            				Text="{Binding VTitle, Mode=TwoWay, NotifyOnValidationError=true, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=true}" 
                                         VerticalAlignment="Center"  TabIndex="1"/>
                                <Label Content="Name:*" Grid.Column="0"     Grid.Row="1" VerticalAlignment="Center"   />
                                <TextBox x:Name="vEmpfNameTextBox" Grid.Column="1"      Grid.Row="1" 
            				Text="{Binding VEmpfName, Mode=TwoWay, NotifyOnValidationError=true, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=true}" VerticalAlignment="Center"   TabIndex="2"/>
                                
                                <Label Content="FatherName:*" Grid.Column="0"     Grid.Row="2" VerticalAlignment="Center"   />
                                <TextBox x:Name="VEmpFatherNameTextBox" Grid.Column="1"      Grid.Row="2" 
                                Text="{Binding VEmpFatherName, Mode=TwoWay, NotifyOnValidationError=true, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=true}" VerticalAlignment="Center"   TabIndex="2"/>


                                <Label Content="Martial Status:*" Grid.Column="0"    Grid.Row="3" VerticalAlignment="Center"   />
                                <ComboBox TabIndex="3"  x:Name="VMartialStatus" Grid.Column="1" Grid.Row="3" ItemsSource="{Binding}" 
            				SelectedValue="{Binding VMartialStatus, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" DisplayMemberPath="VMartialStatus"  
            				 
            				VerticalAlignment="Center" 
            				SelectedValuePath="MartialStatus" 
                                                   />

                                <Label Content="Type:*" Grid.Column="0"   Grid.Row="4" VerticalAlignment="Center"    />
                                <ComboBox TabIndex="4"  x:Name="cmbIEmpTypeId" Grid.Column="1"  Grid.Row="4" ItemsSource="{Binding}" 
            				SelectedValue="{Binding IEmpTypeId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" DisplayMemberPath="vEmpType"  
            				 
            				VerticalAlignment="Center" 
            				SelectedValuePath="IEmpTypeId"   
                            />

                                <Label Content="CNIC #:*" Grid.Column="0"   Grid.Row="5" VerticalAlignment="Center"   />
                                <TextBox x:Name="vIdNumberTextBox" Grid.Column="1"    Grid.Row="5" 
            				Text="{Binding VIdNumber, Mode=TwoWay, NotifyOnValidationError=true, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=true}" VerticalAlignment="Center"   
                                         TabIndex="5"/>


                                <Label Content="Mobile:*" Grid.Column="0"     Grid.Row="6" VerticalAlignment="Center"   />
                                <TextBox x:Name="iMobileTextBox" Grid.Column="1"    Grid.Row="6" 
            				Text="{Binding IMobile, Mode=TwoWay, NotifyOnValidationError=true, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=true}" VerticalAlignment="Center"   TabIndex="3"/>


                                <Label Content="Joining:*" Grid.Column="0"  VerticalAlignment="Center" Height="23" Grid.Row="7"  />
                                <DatePicker x:Name="dDateOfJoiningDatePicker" Grid.Column="1" Grid.Row="7"
            				SelectedDate="{Binding DDateOfJoining, Mode=TwoWay, NotifyOnValidationError=true, 
                            UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=true}" VerticalAlignment="Center"   TabIndex="2"/>

                                <Label Content="Description:*" Grid.Column="0"   Grid.Row="8" VerticalAlignment="top"  />
                                <TextBox x:Name="vDescriptionTextBox"     Grid.Row="8"
            				Text="{Binding VDescription, Mode=TwoWay, NotifyOnValidationError=true, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=true}" 
                                 VerticalAlignment="Center" Grid.Column="1" TabIndex="11"/>

                               
                                <Label Content="Basic Salary:*" Grid.Column="0"   Grid.Row="9"
            				VerticalAlignment="Center"   />
                                <TextBox x:Name="iBasicSalaryTexBox" Grid.Column="1"     Grid.Row="9" 
            				Text="{Binding IBasicSalary, Mode=TwoWay, NotifyOnValidationError=true, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=true}" VerticalAlignment="Center"   TabIndex="4"/>
                                <Label Content="Balance:" Grid.Column="0"   Grid.Row="10" VerticalAlignment="Center" Visibility="Hidden"  />
                                <TextBox x:Name="iBalanceTextBox" Grid.Column="1"    Grid.Row="10" 
            				Text="{Binding IBalance, Mode=TwoWay, NotifyOnValidationError=true, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=true}" 
                                 VerticalAlignment="Center"   Visibility="Hidden"/>

                                <TextBox x:Name="iAccountID" Grid.Column="2"     Grid.Row="11" 
            				Text="{Binding IAccountid, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True}"
                                         VerticalAlignment="Center"  Grid.ColumnSpan="2" Visibility="Hidden" />
                                <TextBox x:Name="iAccountID_Copy" Grid.Column="3"     Grid.Row="11" 
            				Text="{Binding VAccountNo, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True}"
            				VerticalAlignment="Center"  Visibility="Hidden"   />
                                
                                <Label Content="Address:*" Grid.Column="0"   Grid.Row="11" VerticalAlignment="Center"   />
                                <TextBox x:Name="vAddressTextBox"    Grid.Row="11" Grid.Column="1"
            				Text="{Binding VAddress, Mode=TwoWay, NotifyOnValidationError=true, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=true}" 
                             VerticalAlignment="Center"     TabIndex="9"/>
                                <Label Content="Active" Grid.Column="0"    Grid.Row="12" VerticalAlignment="Center"   />
                                <CheckBox x:Name="activeCheckBox" Content="" Grid.Column="1"  Grid.Row="12"
            				IsChecked="{Binding Active, Mode=TwoWay, NotifyOnValidationError=true, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=true}"  
                                   VerticalAlignment="Center" TabIndex="10"/>


                            </Grid>

                        </Grid>
                    </DockPanel>

                    <DockPanel DockPanel.Dock="Right" x:Name="AccountInfo" DataContext="{Binding EmployeeAccount}">
                        <GroupBox Grid.Column="1" Header="Account Detial" Margin="10 10" HorizontalAlignment="Stretch"
                                      VerticalAlignment="Top"  MaxHeight="190">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"  MinWidth="100"/>
                                    <ColumnDefinition Width="Auto"  MinWidth="150"/>


                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>

                                <Label Content="Account Id :" Grid.Column="0" Grid.Row="1" />
                                <Label  Grid.Column="1" Grid.Row="1" Content="{Binding IAccountid}" FontWeight="Bold"  />

                                <Label Content="Account No" Grid.Column="0" Grid.Row="2" />
                                <Label  Grid.Column="1" Grid.Row="2" Content="{Binding VAccountNo}" FontWeight="Bold"   />
                                <Label Content="Account Name" Grid.Column="0" Grid.Row="3"  />
                                <Label  Grid.Column="1" Grid.Row="3" Content="{Binding AccountName}" FontWeight="Bold"   />
                            </Grid>
                        </GroupBox>
                    </DockPanel>

                </DockPanel>


                <!--<GroupBox Header="Salaries Detail" Height="176" >
                    <DataGrid x:Name="SalaryDataGrid" HorizontalAlignment="Left" VerticalAlignment="Top" Height="133"  
            		CanUserReorderColumns="False" CanUserResizeColumns="False" CanUserResizeRows="False"  
            		RowHeaderWidth="0" ColumnHeaderHeight="NaN" FontFamily="Arial" GridLinesVisibility="All"
            		AutoGenerateColumns="False"  
            		
            		CanUserAddRows="False" CanUserDeleteRows="False" CanUserSortColumns="False" Cursor="Hand" Width="850"  
                          SelectionChanged="SalaryDataGrid_SelectionChanged"    >

                        <DataGrid.RowStyle>
                            <Style TargetType="{x:Type DataGridRow}">
                                -->
                <!--<EventSetter Event="Control.MouseDoubleClick" Handler="Item_MouseDoubleClick"/>-->
                <!--

                            </Style>
                        </DataGrid.RowStyle>
                        <DataGrid.Columns>
                            <DataGridTemplateColumn   CanUserResize="False"  Header="Start Date" Width="80" >
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate >
                                        <StackPanel CanHorizontallyScroll="false" >
                                            <TextBlock  Text="{Binding dSrtDate, Mode=TwoWay, StringFormat=\{0:d\}, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource cstmBlock}"/>

                                        </StackPanel>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn   CanUserResize="False"  Header="End Date" Width="80" >
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate >
                                        <StackPanel CanHorizontallyScroll="false" >
                                            <TextBlock  Text="{Binding dEndDate, Mode=TwoWay, StringFormat=\{0:d\}, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource cstmBlock}"/>

                                        </StackPanel>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn   CanUserResize="False"  Header="Generated" Width="80" >
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate >
                                        <StackPanel CanHorizontallyScroll="True" >
                                            <TextBlock  Text="{Binding dGenratedDate, Mode=TwoWay, StringFormat=\{0:d\}, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource cstmBlock}"/>
                                        </StackPanel>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn CanUserResize="False" Width="80"  Header="Sallary">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate >
                                        <StackPanel CanHorizontallyScroll="True" Height="25" >
                                            <TextBlock  Text="{Binding iAmount, Mode=TwoWay, StringFormat=\{0:F\}, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource cstmBlock}"/>
                                            <TextBlock  Text="{Binding iSalId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Visibility="Hidden"/>
                                        </StackPanel>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>

                            <DataGridTemplateColumn CanUserResize="False" Width="90"  Header="Working Days">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate >
                                        <StackPanel CanHorizontallyScroll="True" Height="25" >
                                            <TextBlock  Text="{Binding iDays, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource cstmBlock}"/>
                                        </StackPanel>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn CanUserResize="False" Width="88"  Header="Absents Days">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate >
                                        <StackPanel CanHorizontallyScroll="True" Height="25" >
                                            <TextBlock  Text="{Binding IAbsentdays, Mode=TwoWay,  UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource cstmBlock}"/>

                                        </StackPanel>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>

                            <DataGridTemplateColumn CanUserResize="False" Width="70"  Header="Over Time">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate >
                                        <StackPanel CanHorizontallyScroll="True" Height="25" >
                                            <TextBlock  Text="{Binding FOverTime, Mode=TwoWay, StringFormat=\{0:F\}, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource cstmBlock}"/>

                                        </StackPanel>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>

                            <DataGridTemplateColumn CanUserResize="False" Width="80"  Header="Deduction">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate >
                                        <StackPanel CanHorizontallyScroll="True" Height="25" >
                                            <TextBlock  Text="{Binding iDeduction, Mode=TwoWay, StringFormat=\{0:F\}, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource cstmBlock}"/>

                                        </StackPanel>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn   CanUserResize="False"  Header="Status" Width="85">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate >
                                        <StackPanel CanHorizontallyScroll="True" >
                                            <TextBlock   >
                                                <TextBlock.Style>
                                                    <Style TargetType="{x:Type TextBlock}">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding bIsPaid}" Value="False">
                                                                <Setter Property="Text" Value="Unpaid" />
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding bIsPaid}" Value="True">
                                                                <Setter Property="Text" Value="Paid" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </TextBlock.Style>
                                            </TextBlock>
                                        </StackPanel>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>

                            <DataGridTemplateColumn   CanUserResize="False"  Header="Paid Date" Width="80" >
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate >
                                        <StackPanel CanHorizontallyScroll="True" >
                                            <TextBlock  Text="{Binding dPaidDate, Mode=TwoWay, StringFormat=\{0:d\}, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource cstmBlock}"/>
                                        </StackPanel>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                </GroupBox>-->

            </ScrollViewer>

        </StackPanel>


    </Grid>
</UserControl>
